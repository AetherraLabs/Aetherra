# Aetherra Test Configuration

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery and execution
addopts =
    --strict-markers
    --strict-config
    --tb=short
    --cov=src/aetherra
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    -v

# Minimum coverage threshold
--cov-fail-under = 70

# Test markers for organization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    quantum: Tests requiring quantum computing frameworks
    web: Web interface and API tests
    memory: Memory system tests
    ai: AI model integration tests
    slow: Tests that take longer than 5 seconds
    gpu: Tests requiring GPU acceleration
    external: Tests requiring external services

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::UserWarning:qiskit.*

# Test timeouts
timeout = 300
timeout_method = thread

# Parallel execution
-n auto

# Coverage settings
[coverage:run]
source = src/aetherra
omit =
    */tests/*
    */unused/*
    */backup/*
    */archive/*
    */__pycache__/*
    */migrations/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
