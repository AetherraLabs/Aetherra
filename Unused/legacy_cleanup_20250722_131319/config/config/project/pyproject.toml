[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aetherra"
version = "1.0.0"
description = "aetherra - The First AI-Native Programming Language"
authors = [{name = "aetherra Team", email = "info@aetherra.dev"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "lark>=1.1.7",
    "streamlit>=1.28.0",
    "openai>=1.0.0,<2.0.0",
    "psutil>=5.9.0",
]
keywords = ["ai", "programming-language", "cognitive-computing", "artificial-intelligence"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Interpreters",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.urls]
Homepage = "https://github.com/Zyonic88/aetherra"
Repository = "https://github.com/Zyonic88/aetherra"
Issues = "https://github.com/Zyonic88/aetherra/issues"

[project.optional-dependencies]
ai = [
    "anthropic>=0.5.0",
    "google-generativeai>=0.3.0",
    "ollama>=0.1.0",
    "llama-cpp-python>=0.2.0",
]
enhanced = [
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    "scipy>=1.9.0",
    "chromadb>=0.4.0",
    "faiss-cpu>=1.7.0",
]
gui = [
    "PySide6>=6.5.0",
    "PyQt6>=6.5.0",
    "qdarkstyle>=3.2.0",
]
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "ruff>=0.0.280",
]
all = [
    "aetherra[ai,enhanced,gui]",
]

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
    "backups",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
]

ignore = [
    "E501",  # line too long (handled by line-length setting)
    "B008",  # function calls in default arguments
    "N806",  # variable name should be lowercase (for compatibility)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
known-first-party = ["core", "plugins", "stdlib", "ui"]
split-on-trailing-comma = true
